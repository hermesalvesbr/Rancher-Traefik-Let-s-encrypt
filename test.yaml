# Sample Deployment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: game-2048
  labels:
    app: game-2048
spec:
  replicas: 1
  selector:
    matchLabels:
      app: game-2048
  template:
    metadata:
      labels:
        app: game-2048
    spec:
      containers:
        - image: alexwhen/docker-2048
          name: game-2048
          ports:
            - name: web
              containerPort: 80

# Sample service
---
apiVersion: v1
kind: Service
metadata:
  name: game-2048
spec:
  selector:
    app: game-2048
  ports:
    - port: 80
      targetPort: web
---
# Certificate for ingress route
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: h01.alpha.mydomain.com # name can be anything
spec:
  dnsNames:
    - h01.alpha.mydomain.com # certificate for this domain
  secretName: h01.alpha.mydomain.com # secret name - will be used in IngressRoute  q     
  issuerRef:
    name: http01-cluster-issuer # name of the cluster issuer to use
    kind: ClusterIssuer
---
#IngressRoute listens on https only
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: game-2048
spec:
  entryPoints: 
    - websecure
  routes:
    - match: Host(`h01.alpha.mydomain.com`) # domain to listen on 
      kind: Rule
      services:
        - name: game-2048 # Requests will be forwarded to this service
          port: 80 # port of the service
  tls:
    secretName: h01.alpha.mydomain.com # secret name from the certificate 

---
# Redirection middleware
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: redirect-https
spec:
  redirectScheme:
    scheme: https
    permanent: true
    port: "443"
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: http-h01.alpha.mydomain.como-redirect-to-https
spec:
  entryPoints:
    - web
  routes:
    - match: Host(`h01.alpha.mydomain.com`) # domain to listen on
      kind: Rule 
      services:
        - name: game-2048
          port: 80
      middlewares:
        - name: redirect-https
